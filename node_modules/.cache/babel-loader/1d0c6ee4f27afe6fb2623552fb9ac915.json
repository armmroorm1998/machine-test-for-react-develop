{"ast":null,"code":"var _jsxFileName = \"/Users/arramsibunrueang/Documents/Work/machine/src/components/BoxMachine.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState } from 'react';\nimport AppGrid from \"./AppGrid\";\nimport Image from \"./Image\";\nimport AppModal from \"./AppModal\";\nimport { MachineContext } from \"../App\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction BoxMachine(props) {\n  _s();\n\n  const machine = useContext(MachineContext);\n  const [showModal, setShowModal] = useState(false);\n  const [product, setProduct] = useState([]);\n  let galleryPost = false;\n\n  if (showModal) {\n    galleryPost = /*#__PURE__*/_jsxDEV(AppModal, {\n      setShowModal: setShowModal,\n      product: product\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 23\n    }, this);\n  }\n\n  function onSelectedClick(item) {\n    setProduct(item);\n  }\n\n  const MachineBox = machine.map((data, i) => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"h-full max-w-lg mx-auto bg-indigo-100 border-2 border-indigo-400 border-opacity-50 rounded-lg overflow-hidden shadow-md\",\n      children: [/*#__PURE__*/_jsxDEV(Image, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"py-2 px-4\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-xl font-medium leading-6 tracking-wide text-gray-800 hover:text-blue-500 cursor-pointer\",\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"blog/detail\",\n            children: [\"Name: \", data.machine_name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"px-4 space-y-2 mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-600 font-normal leading-5 tracking-wide\",\n          children: [\"Address: \", data.address]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            setShowModal(true);\n          },\n          onClick: () => {\n            onSelectedClick(data);\n          },\n          type: \"button\",\n          className: \"border border-indigo-500 bg-indigo-500 text-white rounded-md px-4 py-2 transition ease-in duration-700 ease select-none hover:bg-indigo-700 focus:outline-none focus:shadow-outline\",\n          children: \"See more...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this)]\n    }, i, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(AppGrid, {\n      grid: 3,\n      children: MachineBox\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), galleryPost]\n  }, void 0, true);\n}\n\n_s(BoxMachine, \"PjYy0uTC8GFz0yvMRwYJADzK1kc=\");\n\n_c = BoxMachine;\nexport default BoxMachine;\n\nvar _c;\n\n$RefreshReg$(_c, \"BoxMachine\");","map":{"version":3,"sources":["/Users/arramsibunrueang/Documents/Work/machine/src/components/BoxMachine.js"],"names":["React","useContext","useState","AppGrid","Image","AppModal","MachineContext","BoxMachine","props","machine","showModal","setShowModal","product","setProduct","galleryPost","onSelectedClick","item","MachineBox","map","data","i","machine_name","address"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,UAAf,EAA2BC,QAA3B,QAA0C,OAA1C;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAAQC,cAAR,QAA6B,QAA7B;;;;AAEA,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AAAA;;AACvB,QAAMC,OAAO,GAAGR,UAAU,CAACK,cAAD,CAA1B;AACA,QAAM,CAACI,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACU,OAAD,EAAUC,UAAV,IAAwBX,QAAQ,CAAC,EAAD,CAAtC;AAEA,MAAIY,WAAW,GAAG,KAAlB;;AACA,MAAIJ,SAAJ,EAAe;AACXI,IAAAA,WAAW,gBAAG,QAAC,QAAD;AAAU,MAAA,YAAY,EAAEH,YAAxB;AAAsC,MAAA,OAAO,EAAEC;AAA/C;AAAA;AAAA;AAAA;AAAA,YAAd;AACH;;AAED,WAASG,eAAT,CAAyBC,IAAzB,EAA+B;AAC3BH,IAAAA,UAAU,CAACG,IAAD,CAAV;AACH;;AAED,QAAMC,UAAU,GAAGR,OAAO,CAACS,GAAR,CAAY,CAACC,IAAD,EAAOC,CAAP,KAAa;AACxC,wBACI;AAEI,MAAA,SAAS,EAAC,yHAFd;AAAA,8BAGI,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,cAHJ,eAKI;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,+BACI;AACI,UAAA,SAAS,EAAC,8FADd;AAAA,iCAGI;AAAG,YAAA,IAAI,EAAC,aAAR;AAAA,iCAA6BD,IAAI,CAACE,YAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAHJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cALJ,eAYI;AAAK,QAAA,SAAS,EAAC,qBAAf;AAAA,gCACI;AAAG,UAAA,SAAS,EAAC,mDAAb;AAAA,kCACcF,IAAI,CAACG,OADnB;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAKI;AACI,UAAA,OAAO,EAAE,MAAM;AACXX,YAAAA,YAAY,CAAC,IAAD,CAAZ;AACH,WAHL;AAII,UAAA,OAAO,EAAE,MAAM;AAACI,YAAAA,eAAe,CAACI,IAAD,CAAf;AAAsB,WAJ1C;AAKI,UAAA,IAAI,EAAC,QALT;AAMI,UAAA,SAAS,EAAC,qLANd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAZJ;AAAA,OACSC,CADT;AAAA;AAAA;AAAA;AAAA,YADJ;AA+BH,GAhCkB,CAAnB;AAkCA,sBACI;AAAA,4BACI,QAAC,OAAD;AAAS,MAAA,IAAI,EAAE,CAAf;AAAA,gBACKH;AADL;AAAA;AAAA;AAAA;AAAA,YADJ,EAKKH,WALL;AAAA,kBADJ;AASH;;GAzDQP,U;;KAAAA,U;AA2DT,eAAeA,UAAf","sourcesContent":["import React, {useContext, useState} from 'react';\nimport AppGrid from \"./AppGrid\";\nimport Image from \"./Image\";\nimport AppModal from \"./AppModal\";\nimport {MachineContext} from \"../App\";\n\nfunction BoxMachine(props) {\n    const machine = useContext(MachineContext)\n    const [showModal, setShowModal] = useState(false);\n    const [product, setProduct] = useState([]);\n\n    let galleryPost = false;\n    if (showModal) {\n        galleryPost = <AppModal setShowModal={setShowModal} product={product}/>\n    }\n\n    function onSelectedClick(item) {\n        setProduct(item);\n    }\n\n    const MachineBox = machine.map((data, i) => {\n        return (\n            <div\n                key={i}\n                className=\"h-full max-w-lg mx-auto bg-indigo-100 border-2 border-indigo-400 border-opacity-50 rounded-lg overflow-hidden shadow-md\">\n                <Image/>\n\n                <div className=\"py-2 px-4\">\n                    <h1\n                        className=\"text-xl font-medium leading-6 tracking-wide text-gray-800 hover:text-blue-500 cursor-pointer\"\n                    >\n                        <a href=\"blog/detail\">Name: {data.machine_name}</a>\n                    </h1>\n                </div>\n                <div className=\"px-4 space-y-2 mb-4\">\n                    <p className=\"text-gray-600 font-normal leading-5 tracking-wide\">\n                        Address: {data.address}\n                    </p>\n\n                    <button\n                        onClick={() => {\n                            setShowModal(true)\n                        }}\n                        onClick={() => {onSelectedClick(data)}}\n                        type=\"button\"\n                        className=\"border border-indigo-500 bg-indigo-500 text-white rounded-md px-4 py-2 transition ease-in duration-700 ease select-none hover:bg-indigo-700 focus:outline-none focus:shadow-outline\"\n                    >\n                        See more...\n                    </button>\n                </div>\n            </div>\n        )\n    })\n\n    return (\n        <>\n            <AppGrid grid={3}>\n                {MachineBox}\n            </AppGrid>\n\n            {galleryPost}\n        </>\n    );\n}\n\nexport default BoxMachine;"]},"metadata":{},"sourceType":"module"}