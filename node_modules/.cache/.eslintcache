[{"/Users/arramsibunrueang/Documents/Work/machine/src/index.js":"1","/Users/arramsibunrueang/Documents/Work/machine/src/reportWebVitals.js":"2","/Users/arramsibunrueang/Documents/Work/machine/src/App.js":"3","/Users/arramsibunrueang/Documents/Work/machine/src/services/MainServices.js":"4","/Users/arramsibunrueang/Documents/Work/machine/src/config/environemnt.js":"5","/Users/arramsibunrueang/Documents/Work/machine/src/utils/api.js":"6","/Users/arramsibunrueang/Documents/Work/machine/src/components/AppHeader.js":"7","/Users/arramsibunrueang/Documents/Work/machine/src/components/BoxMachine.js":"8","/Users/arramsibunrueang/Documents/Work/machine/src/components/AppGrid.js":"9","/Users/arramsibunrueang/Documents/Work/machine/src/components/Image.js":"10","/Users/arramsibunrueang/Documents/Work/machine/src/components/AppModal.js":"11","/Users/arramsibunrueang/Documents/Work/machine/src/pages/Page404.js":"12","/Users/arramsibunrueang/Documents/Work/machine/src/router/index.js":"13","/Users/arramsibunrueang/Documents/Work/machine/src/container/Main.js":"14","/Users/arramsibunrueang/Documents/Work/machine/src/container/MainAdmin.js":"15","/Users/arramsibunrueang/Documents/Work/machine/src/components/AppHeaderAdmin.js":"16","/Users/arramsibunrueang/Documents/Work/machine/src/pages/Main/Home.js":"17","/Users/arramsibunrueang/Documents/Work/machine/src/pages/MainAdmin/ProductPage.js":"18","/Users/arramsibunrueang/Documents/Work/machine/src/pages/MainAdmin/DashboardPage.js":"19","/Users/arramsibunrueang/Documents/Work/machine/src/components/MainAdmin/ProductManage.js":"20","/Users/arramsibunrueang/Documents/Work/machine/src/components/MainAdmin/ModalMachine.js":"21"},{"size":509,"mtime":1623660324937,"results":"22","hashOfConfig":"23"},{"size":362,"mtime":1623124953369,"results":"24","hashOfConfig":"23"},{"size":159,"mtime":1623663375411,"results":"25","hashOfConfig":"23"},{"size":2247,"mtime":1623145083209,"results":"26","hashOfConfig":"23"},{"size":109,"mtime":1623579927553,"results":"27","hashOfConfig":"23"},{"size":771,"mtime":1623144834845,"results":"28","hashOfConfig":"23"},{"size":3173,"mtime":1623661203785,"results":"29","hashOfConfig":"23"},{"size":4047,"mtime":1623655338081,"results":"30","hashOfConfig":"23"},{"size":289,"mtime":1623393120121,"results":"31","hashOfConfig":"23"},{"size":403,"mtime":1623671406898,"results":"32","hashOfConfig":"23"},{"size":3341,"mtime":1623655044449,"results":"33","hashOfConfig":"23"},{"size":313,"mtime":1623662641089,"results":"34","hashOfConfig":"23"},{"size":1191,"mtime":1623667482891,"results":"35","hashOfConfig":"23"},{"size":303,"mtime":1623663384545,"results":"36","hashOfConfig":"23"},{"size":328,"mtime":1623663397090,"results":"37","hashOfConfig":"23"},{"size":14914,"mtime":1623667434044,"results":"38","hashOfConfig":"23"},{"size":203,"mtime":1623663496206,"results":"39","hashOfConfig":"23"},{"size":236,"mtime":1623667540474,"results":"40","hashOfConfig":"23"},{"size":209,"mtime":1623667482909,"results":"41","hashOfConfig":"23"},{"size":7428,"mtime":1623746045821,"results":"42","hashOfConfig":"23"},{"size":5192,"mtime":1623745872046,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"1h7ckuo",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"46"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"46"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"46"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"46"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"46"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/arramsibunrueang/Documents/Work/machine/src/index.js",[],["92","93"],"/Users/arramsibunrueang/Documents/Work/machine/src/reportWebVitals.js",[],"/Users/arramsibunrueang/Documents/Work/machine/src/App.js",[],"/Users/arramsibunrueang/Documents/Work/machine/src/services/MainServices.js",["94"],"import {request} from \"../utils/api\";\nimport env from '../config/environemnt'\n\nexport default {\n    getAllMachine() {\n        return request({\n            url: `${env.serveConfig.SERVICE_URL}/machine`,\n            method: 'get',\n            data: {}\n        })\n        // return apiServices.get('/machine')\n    },\n\n    placeOrder({productId, totalPrice, totalNumber}) {\n        return request({\n            url: `${env.serveConfig.SERVICE_URL}/orders/placeOrder`,\n            method: 'post',\n            data: {productId, totalPrice, totalNumber}\n        })\n        // return apiServices.post('/orders/placeOrder', { productId, totalPrice, totalNumber })\n    },\n\n    createMachine({machineName, location, address}) {\n        return request({\n            url: `${env.serveConfig.SERVICE_URL}/machine`,\n            method: 'post',\n            data: {machineName, location, address}\n        })\n        // return apiServices.post('/machine', { machineName, location, address })\n    },\n\n    updateMachine(id, {machineName, location, address}) {\n        return request({\n            url: `${env.serveConfig.SERVICE_URL}/machine/${id}`,\n            method: 'put',\n            data: {machineName, location, address}\n        })\n        // return apiServices.put(`/machine/${id}`, { machineName, location, address })\n    },\n\n    createProduct({productName, price, number, machineId}) {\n        return request({\n            url: `${env.serveConfig.SERVICE_URL}/product`,\n            method: 'post',\n            data: {productName, price, number, machineId}\n        })\n        // return apiServices.post('/product', { productName, price, number, machineId })\n    },\n\n    updateProduct(id, {productName, price, number, machineId}) {\n        return request({\n            url: `${env.serveConfig.SERVICE_URL}/product/${id}`,\n            method: 'put',\n            data: {productName, price, number, machineId}\n        })\n        // return apiServices.put(`/product/${id}`, { productName, price, number, machineId })\n    },\n\n    checkStock() {\n        return request({\n            url: `${env.serveConfig.SERVICE_URL}/product/checkStock`,\n            method: 'get',\n            data: {}\n        })\n        // return apiServices.get('/product/checkStock')\n    }\n}\n","/Users/arramsibunrueang/Documents/Work/machine/src/config/environemnt.js",[],"/Users/arramsibunrueang/Documents/Work/machine/src/utils/api.js",[],"/Users/arramsibunrueang/Documents/Work/machine/src/components/AppHeader.js",["95","96","97"],"import {Disclosure, Menu, Transition} from '@headlessui/react'\nimport {BellIcon, MenuIcon, XIcon} from '@heroicons/react/outline'\n\nfunction classNames(...classes) {\n    return classes.filter(Boolean).join(' ')\n}\n\nexport default function AppHeader() {\n    return (\n        <Disclosure as=\"nav\" className=\"bg-gray-800\">\n            {({open}) => (\n                <>\n                    <div className=\"max-w-7xl mx-auto px-2 sm:px-6 lg:px-8\">\n                        <div className=\"relative flex items-center justify-between h-16\">\n                            <div className=\"absolute inset-y-0 left-0 flex items-center sm:hidden\">\n                                {/* Mobile menu button*/}\n                                <Disclosure.Button\n                                    className=\"inline-flex items-center justify-center p-2 rounded-md text-gray-400 hover:text-white hover:bg-gray-700 focus:outline-none focus:ring-2 focus:ring-inset focus:ring-white\">\n                                    <span className=\"sr-only\">Open main menu</span>\n                                    {open ? (\n                                        <XIcon className=\"block h-6 w-6\" aria-hidden=\"true\"/>\n                                    ) : (\n                                        <MenuIcon className=\"block h-6 w-6\" aria-hidden=\"true\"/>\n                                    )}\n                                </Disclosure.Button>\n                            </div>\n                            <div className=\"flex-1 flex items-center justify-center sm:items-stretch sm:justify-start\">\n                                <div className=\"flex-shrink-0 flex items-center\">\n                                    <img\n                                        className=\"block lg:hidden h-8 w-auto\"\n                                        src=\"https://tailwindui.com/img/logos/workflow-mark-indigo-500.svg\"\n                                        alt=\"Workflow\"\n                                    />\n                                    <img\n                                        className=\"hidden lg:block h-8 w-auto\"\n                                        src=\"https://tailwindui.com/img/logos/workflow-logo-indigo-500-mark-white-text.svg\"\n                                        alt=\"Workflow\"\n                                    />\n                                </div>\n                            </div>\n                            <div\n                                className=\"absolute inset-y-0 right-0 flex items-center pr-2 sm:static sm:inset-auto sm:ml-6 sm:pr-0\">\n                                <button\n                                    className=\"bg-gray-800 p-1 rounded-full text-gray-400 hover:text-white focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-gray-800 focus:ring-white\">\n                                    <span className=\"sr-only\">View notifications</span>\n                                    <BellIcon className=\"h-6 w-6\" aria-hidden=\"true\"/>\n                                </button>\n                            </div>\n                        </div>\n                    </div>\n                </>\n            )}\n        </Disclosure>\n    )\n}\n","/Users/arramsibunrueang/Documents/Work/machine/src/components/BoxMachine.js",["98"],"import React, {useContext, useEffect, useState} from 'react';\nimport AppGrid from \"./AppGrid\";\nimport Image from \"./Image\";\nimport AppModal from \"./AppModal\";\nimport MainServices from \"../services/MainServices\";\nimport Swal from 'sweetalert2'\n\nfunction BoxMachine(props) {\n    const [machineList, setMachineList] = useState([]);\n    const [showModal, setShowModal] = useState(false);\n    const [product, setProduct] = useState([]);\n\n    useEffect(() => {\n        ReadData();\n    }, [])\n\n    async function ReadData() {\n        let resp = await MainServices.getAllMachine();\n        setMachineList(resp.data)\n    }\n\n    function onCloseModal() {\n        const modalToClose = document.querySelector('.main-modal');\n        modalToClose.classList.remove('fadeIn');\n        modalToClose.classList.add('fadeOut');\n        setTimeout(() => {\n            modalToClose.style.display = 'none';\n            setShowModal(false);\n        }, 1000);\n    }\n\n    async function onSubmitSellPoruct(item) {\n        let postData = {\n            'productId': item.id,\n            'totalPrice': parseInt(item.price),\n            'totalNumber': 1\n        }\n\n        Swal.fire({\n            title: 'ยืนยันคำสั่งซื้อหรือไม่?',\n            icon: 'question',\n            showCancelButton: true,\n            confirmButtonColor: '#3085d6',\n            cancelButtonColor: '#d33',\n            confirmButtonText: 'ยืนยัน',\n            cancelButtonText: 'ยกเลิก'\n        }).then((result) => {\n            if (result.isConfirmed) {\n                MainServices.placeOrder(postData).then(resp => {\n                    Swal.fire(\n                        'สั่งซื้อสินค้าสำเร็จ',\n                        'ขอบคุณสำหรับคำสั่งซื้อของท่าน',\n                        'success'\n                    )\n                    ReadData()\n                    onCloseModal()\n                }).catch(err => {\n                    console.log(err)\n                })\n            }\n        })\n    }\n\n    let galleryPost = null;\n    if (showModal) {\n        galleryPost = <AppModal\n            product={product}\n            onSubmitSellPoruct={onSubmitSellPoruct}\n            onCloseModal={onCloseModal}\n        />\n    }\n\n    function onSelectedClick(item) {\n        setProduct(item)\n        setShowModal(true)\n    }\n\n    const MachineBox = machineList.map((data, i) => {\n        return (\n            <div\n                key={i}\n                className=\"h-full max-w-lg mx-auto bg-indigo-100 border-2 border-indigo-400 border-opacity-50 rounded-lg overflow-hidden shadow-md\">\n                <Image/>\n\n                <div className=\"py-2 px-4\">\n                    <h1\n                        className=\"text-xl font-medium leading-6 tracking-wide text-gray-800 hover:text-blue-500 cursor-pointer\"\n                    >\n                        <span onClick={() => {onSelectedClick(data.product)}}>Name: {data.machine_name}</span>\n                    </h1>\n                </div>\n                <div className=\"px-4 space-y-2 mb-4\">\n                    <p className=\"text-gray-600 font-normal leading-5 tracking-wide\">\n                        Address: {data.address}\n                    </p>\n\n                    <button\n                        onClick={() => {\n                            onSelectedClick(data.product)\n                        }}\n                        type=\"button\"\n                        className=\"border border-indigo-500 bg-indigo-500 text-white rounded-md px-4 py-2 transition ease-in duration-700 ease select-none hover:bg-indigo-700 focus:outline-none focus:shadow-outline\"\n                    >\n                        See more...\n                    </button>\n                </div>\n            </div>\n        )\n    })\n\n    return (\n        <>\n            <AppGrid grid={3}>\n                {MachineBox}\n            </AppGrid>\n\n            {galleryPost}\n        </>\n    );\n}\n\nexport default BoxMachine;","/Users/arramsibunrueang/Documents/Work/machine/src/components/AppGrid.js",[],"/Users/arramsibunrueang/Documents/Work/machine/src/components/Image.js",[],"/Users/arramsibunrueang/Documents/Work/machine/src/components/AppModal.js",["99","100"],"import React, {useContext} from 'react';\nimport './AppModal.css'\nimport AppGrid from \"./AppGrid\";\n\nfunction AppModal(props) {\n    const {product, onSubmitSellPoruct, onCloseModal} = props\n\n    const isSoldOut = (value) => {\n        if (value === 0) {\n            return <p className=\"text-sm line-through text-gray-500 px-8\">Sold Out</p>\n        }\n    }\n\n    const productList = product.map((data, i) => {\n        return (\n            <div key={i}>\n                <div className=\"text-center p-5 flex-auto justify-center\">\n                    <img src='/img/bottle.png' className='bottle mx-auto'/>\n                    <h2 className=\"text-xl font-bold py-4 \">{data.product_name}</h2>\n                    <p className=\"text-sm text-gray-500 px-8\">ราคา: ฿ {data.price}</p>\n                    <p\n                        className={`text-sm text-gray-500 px-8 ${data.number === 0 ? 'line-through' : ''}`}>\n                        จำนวน: {data.number}\n                    </p>\n                    {isSoldOut(data.number)}\n\n                    <div className=\"p-3  mt-2 text-center space-x-4 md:block\">\n                        <button\n                            disabled={data.number === 0}\n                            onClick={() => {\n                                onSubmitSellPoruct(data)\n                            }}\n                            className=\"mb-2 md:mb-0 bg-white px-5 py-2 text-sm shadow-sm font-medium tracking-wider border text-gray-600 rounded-full hover:shadow-lg hover:bg-gray-100\">\n                            Buy\n                        </button>\n                    </div>\n                </div>\n            </div>\n        )\n    })\n\n    return (\n        <div>\n            <div\n                className=\"main-modal min-w-screen h-screen animated fadeIn faster fixed left-0 top-0 flex justify-center items-center inset-0 z-50 outline-none focus:outline-none bg-gray-600 bg-opacity-80\"\n                id=\"modal-id\">\n                <div className=\"w-full h-full p-5 relative mx-auto my-auto rounded-xl shadow-lg  bg-white\">\n                    <div className=\"flex justify-between items-center pb-3\">\n                        <p className=\"text-2xl font-bold text-gray-500\">Machine no.01</p>\n                        <div\n                            className=\"modal-close cursor-pointer z-50\"\n                            onClick={() => {\n                                onCloseModal()\n                            }}\n                        >\n                            <svg className=\"fill-current text-gray-500\" xmlns=\"http://www.w3.org/2000/svg\"\n                                 width=\"18\"\n                                 height=\"18\"\n                                 viewBox=\"0 0 18 18\">\n                                <path\n                                    d=\"M14.53 4.53l-1.06-1.06L9 7.94 4.53 3.47 3.47 4.53 7.94 9l-4.47 4.47 1.06 1.06L9 10.06l4.47 4.47 1.06-1.06L10.06 9z\">\n                                </path>\n                            </svg>\n                        </div>\n                    </div>\n                    <div className=\"\">\n                        <AppGrid grid={4}>\n                            {productList}\n                        </AppGrid>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default AppModal;","/Users/arramsibunrueang/Documents/Work/machine/src/pages/Page404.js",[],"/Users/arramsibunrueang/Documents/Work/machine/src/router/index.js",[],"/Users/arramsibunrueang/Documents/Work/machine/src/container/Main.js",[],"/Users/arramsibunrueang/Documents/Work/machine/src/container/MainAdmin.js",[],"/Users/arramsibunrueang/Documents/Work/machine/src/components/AppHeaderAdmin.js",["101","102","103"],"import {Fragment, useEffect, useState} from 'react'\nimport {Disclosure, Menu, Transition} from '@headlessui/react'\nimport {BellIcon, MenuIcon, XIcon} from '@heroicons/react/outline'\nimport {Link, NavLink, useLocation} from \"react-router-dom\";\n\nconst navigation = [{title: 'Dashboard', route: '/admin'}, {title: 'ProductPage Manage', route: '/admin/product'}]\nconst profile = ['Your Profile', 'Settings', 'Sign out']\n\nfunction classNames(...classes) {\n    return classes.filter(Boolean).join(' ')\n}\n\nexport default function AppHeaderAdmin() {\n    let location = useLocation()\n    let [title, setTitle] = useState('');\n\n    useEffect(() => {\n        const mapTitle = navigation.filter((route) => {\n            return route.route === location.pathname;\n        })\n\n        setTitle(mapTitle[0].title)\n    }, [title])\n\n    return (\n        <div>\n            <Disclosure as=\"nav\" className=\"bg-gray-800\">\n                {({open}) => (\n                    <>\n                        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n                            <div className=\"flex items-center justify-between h-16\">\n                                <div className=\"flex items-center\">\n                                    <div className=\"flex-shrink-0\">\n                                        <img\n                                            className=\"h-8 w-8\"\n                                            src=\"https://tailwindui.com/img/logos/workflow-mark-indigo-500.svg\"\n                                            alt=\"Workflow\"\n                                        />\n                                    </div>\n                                    <div className=\"hidden md:block\">\n                                        <div className=\"ml-10 flex items-baseline space-x-4\">\n                                            {navigation.map((item, itemIdx) =>\n                                                itemIdx === 0 ? (\n                                                    <Fragment key={itemIdx}>\n                                                        {/* Current: \"bg-gray-900 text-white\", Default: \"text-gray-300 hover:bg-gray-700 hover:text-white\" */}\n                                                        <NavLink\n                                                            exact\n                                                            to={item.route}\n                                                            onClick={() => {\n                                                                setTitle(item.title)\n                                                            }}\n                                                            className=\"text-gray-300 hover:bg-gray-700 hover:text-white px-3 py-2 rounded-md text-sm font-medium\"\n                                                            activeClassName=\"bg-gray-900 text-white px-3 py-2 rounded-md text-sm font-medium0\"\n                                                        >\n                                                            {item.title}\n                                                        </NavLink>\n                                                    </Fragment>\n                                                ) : (\n                                                    <NavLink\n                                                        exact\n                                                        key={itemIdx}\n                                                        to={item.route}\n                                                        onClick={() => {\n                                                            setTitle(item.title)\n                                                        }}\n                                                        className=\"text-gray-300 hover:bg-gray-700 hover:text-white px-3 py-2 rounded-md text-sm font-medium\"\n                                                        activeClassName=\"bg-gray-900 text-white px-3 py-2 rounded-md text-sm font-medium0\"\n                                                    >\n                                                        {item.title}\n                                                    </NavLink>\n                                                )\n                                            )}\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"hidden md:block\">\n                                    <div className=\"ml-4 flex items-center md:ml-6\">\n                                        <button\n                                            className=\"bg-gray-800 p-1 rounded-full text-gray-400 hover:text-white focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-gray-800 focus:ring-white\">\n                                            <span className=\"sr-only\">View notifications</span>\n                                            <BellIcon className=\"h-6 w-6\" aria-hidden=\"true\"/>\n                                        </button>\n\n                                        {/* Profile dropdown */}\n                                        <Menu as=\"div\" className=\"ml-3 relative\">\n                                            {({open}) => (\n                                                <>\n                                                    <div>\n                                                        <Menu.Button\n                                                            className=\"max-w-xs bg-gray-800 rounded-full flex items-center text-sm focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-gray-800 focus:ring-white\">\n                                                            <span className=\"sr-only\">Open user menu</span>\n                                                            <img\n                                                                className=\"h-8 w-8 rounded-full\"\n                                                                src=\"https://images.unsplash.com/photo-1472099645785-5658abf4ff4e?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=facearea&facepad=2&w=256&h=256&q=80\"\n                                                                alt=\"\"\n                                                            />\n                                                        </Menu.Button>\n                                                    </div>\n                                                    <Transition\n                                                        show={open}\n                                                        as={Fragment}\n                                                        enter=\"transition ease-out duration-100\"\n                                                        enterFrom=\"transform opacity-0 scale-95\"\n                                                        enterTo=\"transform opacity-100 scale-100\"\n                                                        leave=\"transition ease-in duration-75\"\n                                                        leaveFrom=\"transform opacity-100 scale-100\"\n                                                        leaveTo=\"transform opacity-0 scale-95\"\n                                                    >\n                                                        <Menu.Items\n                                                            static\n                                                            className=\"origin-top-right absolute right-0 mt-2 w-48 rounded-md shadow-lg py-1 bg-white ring-1 ring-black ring-opacity-5 focus:outline-none\"\n                                                        >\n                                                            {profile.map((item) => (\n                                                                <Menu.Item key={item}>\n                                                                    {({active}) => (\n                                                                        <a\n                                                                            href=\"#\"\n                                                                            className={classNames(\n                                                                                active ? 'bg-gray-100' : '',\n                                                                                'block px-4 py-2 text-sm text-gray-700'\n                                                                            )}\n                                                                        >\n                                                                            {item}\n                                                                        </a>\n                                                                    )}\n                                                                </Menu.Item>\n                                                            ))}\n                                                        </Menu.Items>\n                                                    </Transition>\n                                                </>\n                                            )}\n                                        </Menu>\n                                    </div>\n                                </div>\n                                <div className=\"-mr-2 flex md:hidden\">\n                                    {/* Mobile menu button */}\n                                    <Disclosure.Button\n                                        className=\"bg-gray-800 inline-flex items-center justify-center p-2 rounded-md text-gray-400 hover:text-white hover:bg-gray-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-gray-800 focus:ring-white\">\n                                        <span className=\"sr-only\">Open main menu</span>\n                                        {open ? (\n                                            <XIcon className=\"block h-6 w-6\" aria-hidden=\"true\"/>\n                                        ) : (\n                                            <MenuIcon className=\"block h-6 w-6\" aria-hidden=\"true\"/>\n                                        )}\n                                    </Disclosure.Button>\n                                </div>\n                            </div>\n                        </div>\n\n                        <Disclosure.Panel className=\"md:hidden\">\n                            <div className=\"px-2 pt-2 pb-3 space-y-1 sm:px-3\">\n                                {navigation.map((item, itemIdx) =>\n                                    itemIdx === 0 ? (\n                                        <Fragment key={itemIdx}>\n                                            {/* Current: \"bg-gray-900 text-white\", Default: \"text-gray-300 hover:bg-gray-700 hover:text-white\" */}\n                                            <Link to={item.route}\n                                                  onClick={() => {\n                                                      setTitle(item.title)\n                                                  }}\n                                                  className=\"bg-gray-900 text-white block px-3 py-2 rounded-md text-base font-medium\">\n                                                {item.title}\n                                            </Link>\n                                        </Fragment>\n                                    ) : (\n                                        <Link\n                                            key={itemIdx}\n                                            to={item.route}\n                                            onClick={() => {\n                                                setTitle(item.title)\n                                            }}\n                                            className=\"text-gray-300 hover:bg-gray-700 hover:text-white block px-3 py-2 rounded-md text-base font-medium\"\n                                        >\n                                            {item.title}\n                                        </Link>\n                                    )\n                                )}\n                            </div>\n                            <div className=\"pt-4 pb-3 border-t border-gray-700\">\n                                <div className=\"flex items-center px-5\">\n                                    <div className=\"flex-shrink-0\">\n                                        <img\n                                            className=\"h-10 w-10 rounded-full\"\n                                            src=\"https://images.unsplash.com/photo-1472099645785-5658abf4ff4e?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=facearea&facepad=2&w=256&h=256&q=80\"\n                                            alt=\"\"\n                                        />\n                                    </div>\n                                    <div className=\"ml-3\">\n                                        <div className=\"text-base font-medium leading-none text-white\">Tom Cook</div>\n                                        <div\n                                            className=\"text-sm font-medium leading-none text-gray-400\">tom@example.com\n                                        </div>\n                                    </div>\n                                    <button\n                                        className=\"ml-auto bg-gray-800 flex-shrink-0 p-1 rounded-full text-gray-400 hover:text-white focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-gray-800 focus:ring-white\">\n                                        <span className=\"sr-only\">View notifications</span>\n                                        <BellIcon className=\"h-6 w-6\" aria-hidden=\"true\"/>\n                                    </button>\n                                </div>\n                                <div className=\"mt-3 px-2 space-y-1\">\n                                    {profile.map((item) => (\n                                        <a\n                                            key={item}\n                                            href=\"#\"\n                                            className=\"block px-3 py-2 rounded-md text-base font-medium text-gray-400 hover:text-white hover:bg-gray-700\"\n                                        >\n                                            {item}\n                                        </a>\n                                    ))}\n                                </div>\n                            </div>\n                        </Disclosure.Panel>\n                    </>\n                )}\n            </Disclosure>\n\n            <header className=\"bg-white shadow\">\n                <div className=\"max-w-7xl mx-auto py-6 px-4 sm:px-6 lg:px-8\">\n                    <h1 className=\"text-3xl font-bold text-gray-900\">{title}</h1>\n                </div>\n            </header>\n        </div>\n    )\n}\n","/Users/arramsibunrueang/Documents/Work/machine/src/pages/Main/Home.js",[],"/Users/arramsibunrueang/Documents/Work/machine/src/pages/MainAdmin/ProductPage.js",[],"/Users/arramsibunrueang/Documents/Work/machine/src/pages/MainAdmin/DashboardPage.js",[],"/Users/arramsibunrueang/Documents/Work/machine/src/components/MainAdmin/ProductManage.js",[],"/Users/arramsibunrueang/Documents/Work/machine/src/components/MainAdmin/ModalMachine.js",["104"],{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","severity":1,"message":"110","line":4,"column":1,"nodeType":"111","endLine":67,"endColumn":2},{"ruleId":"112","severity":1,"message":"113","line":1,"column":21,"nodeType":"114","messageId":"115","endLine":1,"endColumn":25},{"ruleId":"112","severity":1,"message":"116","line":1,"column":27,"nodeType":"114","messageId":"115","endLine":1,"endColumn":37},{"ruleId":"112","severity":1,"message":"117","line":4,"column":10,"nodeType":"114","messageId":"115","endLine":4,"endColumn":20},{"ruleId":"112","severity":1,"message":"118","line":1,"column":16,"nodeType":"114","messageId":"115","endLine":1,"endColumn":26},{"ruleId":"112","severity":1,"message":"118","line":1,"column":16,"nodeType":"114","messageId":"115","endLine":1,"endColumn":26},{"ruleId":"119","severity":1,"message":"120","line":18,"column":21,"nodeType":"121","endLine":18,"endColumn":76},{"ruleId":"122","severity":1,"message":"123","line":23,"column":8,"nodeType":"124","endLine":23,"endColumn":15,"suggestions":"125"},{"ruleId":"126","severity":1,"message":"127","line":116,"column":73,"nodeType":"121","endLine":122,"endColumn":74},{"ruleId":"126","severity":1,"message":"127","line":201,"column":41,"nodeType":"121","endLine":205,"endColumn":42},{"ruleId":"112","severity":1,"message":"128","line":4,"column":78,"nodeType":"114","messageId":"115","endLine":4,"endColumn":88},"no-native-reassign",["129"],"no-negated-in-lhs",["130"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-unused-vars","'Menu' is defined but never used.","Identifier","unusedVar","'Transition' is defined but never used.","'classNames' is defined but never used.","'useContext' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'location.pathname'. Either include it or remove the dependency array.","ArrayExpression",["131"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'refMachine' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"132","fix":"133"},"Update the dependencies array to be: [location.pathname, title]",{"range":"134","text":"135"},[805,812],"[location.pathname, title]"]