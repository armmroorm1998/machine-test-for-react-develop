{"ast":null,"code":"import { request } from \"../utils/api\";\nimport env from '../config/environemnt';\nexport default {\n  getAllMachine() {\n    return request({\n      url: `${env.serveConfig.SERVICE_URL}/machine`,\n      method: 'get',\n      data: {}\n    }); // return apiServices.get('/machine')\n  },\n\n  placeOrder({\n    productId,\n    totalPrice,\n    totalNumber\n  }) {\n    return request({\n      url: `${env.serveConfig.SERVICE_URL}/orders/placeOrder`,\n      method: 'post',\n      data: {\n        productId,\n        totalPrice,\n        totalNumber\n      }\n    }); // return apiServices.post('/orders/placeOrder', { productId, totalPrice, totalNumber })\n  },\n\n  createMachine({\n    machineName,\n    location,\n    address\n  }) {\n    return request({\n      url: `${env.serveConfig.SERVICE_URL}/machine`,\n      method: 'post',\n      data: {\n        machineName,\n        location,\n        address\n      }\n    }); // return apiServices.post('/machine', { machineName, location, address })\n  },\n\n  updateMachine(id, {\n    machineName,\n    location,\n    address\n  }) {\n    return request({\n      url: `${env.serveConfig.SERVICE_URL}/machine/${id}`,\n      method: 'put',\n      data: {\n        machineName,\n        location,\n        address\n      }\n    }); // return apiServices.put(`/machine/${id}`, { machineName, location, address })\n  },\n\n  createProduct({\n    productName,\n    price,\n    number,\n    machineId\n  }) {\n    return request({\n      url: `${env.serveConfig.SERVICE_URL}/product`,\n      method: 'post',\n      data: {\n        productName,\n        price,\n        number,\n        machineId\n      }\n    }); // return apiServices.post('/product', { productName, price, number, machineId })\n  },\n\n  updateProduct(id, {\n    productName,\n    price,\n    number,\n    machineId\n  }) {\n    return request({\n      url: `${env.serveConfig.SERVICE_URL}/product/${id}`,\n      method: 'put',\n      data: {\n        productName,\n        price,\n        number,\n        machineId\n      }\n    }); // return apiServices.put(`/product/${id}`, { productName, price, number, machineId })\n  },\n\n  checkStock() {\n    return request({\n      url: `${env.serveConfig.SERVICE_URL}/product/checkStock`,\n      method: 'get',\n      data: {}\n    }); // return apiServices.get('/product/checkStock')\n  }\n\n};","map":{"version":3,"sources":["/Users/arramsibunrueang/Documents/Work/machine/src/services/MainServices.js"],"names":["request","env","getAllMachine","url","serveConfig","SERVICE_URL","method","data","placeOrder","productId","totalPrice","totalNumber","createMachine","machineName","location","address","updateMachine","id","createProduct","productName","price","number","machineId","updateProduct","checkStock"],"mappings":"AAAA,SAAQA,OAAR,QAAsB,cAAtB;AACA,OAAOC,GAAP,MAAgB,uBAAhB;AAEA,eAAe;AACXC,EAAAA,aAAa,GAAG;AACZ,WAAOF,OAAO,CAAC;AACXG,MAAAA,GAAG,EAAG,GAAEF,GAAG,CAACG,WAAJ,CAAgBC,WAAY,UADzB;AAEXC,MAAAA,MAAM,EAAE,KAFG;AAGXC,MAAAA,IAAI,EAAE;AAHK,KAAD,CAAd,CADY,CAMZ;AACH,GARU;;AAUXC,EAAAA,UAAU,CAAC;AAACC,IAAAA,SAAD;AAAYC,IAAAA,UAAZ;AAAwBC,IAAAA;AAAxB,GAAD,EAAuC;AAC7C,WAAOX,OAAO,CAAC;AACXG,MAAAA,GAAG,EAAG,GAAEF,GAAG,CAACG,WAAJ,CAAgBC,WAAY,oBADzB;AAEXC,MAAAA,MAAM,EAAE,MAFG;AAGXC,MAAAA,IAAI,EAAE;AAACE,QAAAA,SAAD;AAAYC,QAAAA,UAAZ;AAAwBC,QAAAA;AAAxB;AAHK,KAAD,CAAd,CAD6C,CAM7C;AACH,GAjBU;;AAmBXC,EAAAA,aAAa,CAAC;AAACC,IAAAA,WAAD;AAAcC,IAAAA,QAAd;AAAwBC,IAAAA;AAAxB,GAAD,EAAmC;AAC5C,WAAOf,OAAO,CAAC;AACXG,MAAAA,GAAG,EAAG,GAAEF,GAAG,CAACG,WAAJ,CAAgBC,WAAY,UADzB;AAEXC,MAAAA,MAAM,EAAE,MAFG;AAGXC,MAAAA,IAAI,EAAE;AAACM,QAAAA,WAAD;AAAcC,QAAAA,QAAd;AAAwBC,QAAAA;AAAxB;AAHK,KAAD,CAAd,CAD4C,CAM5C;AACH,GA1BU;;AA4BXC,EAAAA,aAAa,CAACC,EAAD,EAAK;AAACJ,IAAAA,WAAD;AAAcC,IAAAA,QAAd;AAAwBC,IAAAA;AAAxB,GAAL,EAAuC;AAChD,WAAOf,OAAO,CAAC;AACXG,MAAAA,GAAG,EAAG,GAAEF,GAAG,CAACG,WAAJ,CAAgBC,WAAY,YAAWY,EAAG,EADvC;AAEXX,MAAAA,MAAM,EAAE,KAFG;AAGXC,MAAAA,IAAI,EAAE;AAACM,QAAAA,WAAD;AAAcC,QAAAA,QAAd;AAAwBC,QAAAA;AAAxB;AAHK,KAAD,CAAd,CADgD,CAMhD;AACH,GAnCU;;AAqCXG,EAAAA,aAAa,CAAC;AAACC,IAAAA,WAAD;AAAcC,IAAAA,KAAd;AAAqBC,IAAAA,MAArB;AAA6BC,IAAAA;AAA7B,GAAD,EAA0C;AACnD,WAAOtB,OAAO,CAAC;AACXG,MAAAA,GAAG,EAAG,GAAEF,GAAG,CAACG,WAAJ,CAAgBC,WAAY,UADzB;AAEXC,MAAAA,MAAM,EAAE,MAFG;AAGXC,MAAAA,IAAI,EAAE;AAACY,QAAAA,WAAD;AAAcC,QAAAA,KAAd;AAAqBC,QAAAA,MAArB;AAA6BC,QAAAA;AAA7B;AAHK,KAAD,CAAd,CADmD,CAMnD;AACH,GA5CU;;AA8CXC,EAAAA,aAAa,CAACN,EAAD,EAAK;AAACE,IAAAA,WAAD;AAAcC,IAAAA,KAAd;AAAqBC,IAAAA,MAArB;AAA6BC,IAAAA;AAA7B,GAAL,EAA8C;AACvD,WAAOtB,OAAO,CAAC;AACXG,MAAAA,GAAG,EAAG,GAAEF,GAAG,CAACG,WAAJ,CAAgBC,WAAY,YAAWY,EAAG,EADvC;AAEXX,MAAAA,MAAM,EAAE,KAFG;AAGXC,MAAAA,IAAI,EAAE;AAACY,QAAAA,WAAD;AAAcC,QAAAA,KAAd;AAAqBC,QAAAA,MAArB;AAA6BC,QAAAA;AAA7B;AAHK,KAAD,CAAd,CADuD,CAMvD;AACH,GArDU;;AAuDXE,EAAAA,UAAU,GAAG;AACT,WAAOxB,OAAO,CAAC;AACXG,MAAAA,GAAG,EAAG,GAAEF,GAAG,CAACG,WAAJ,CAAgBC,WAAY,qBADzB;AAEXC,MAAAA,MAAM,EAAE,KAFG;AAGXC,MAAAA,IAAI,EAAE;AAHK,KAAD,CAAd,CADS,CAMT;AACH;;AA9DU,CAAf","sourcesContent":["import {request} from \"../utils/api\";\nimport env from '../config/environemnt'\n\nexport default {\n    getAllMachine() {\n        return request({\n            url: `${env.serveConfig.SERVICE_URL}/machine`,\n            method: 'get',\n            data: {}\n        })\n        // return apiServices.get('/machine')\n    },\n\n    placeOrder({productId, totalPrice, totalNumber}) {\n        return request({\n            url: `${env.serveConfig.SERVICE_URL}/orders/placeOrder`,\n            method: 'post',\n            data: {productId, totalPrice, totalNumber}\n        })\n        // return apiServices.post('/orders/placeOrder', { productId, totalPrice, totalNumber })\n    },\n\n    createMachine({machineName, location, address}) {\n        return request({\n            url: `${env.serveConfig.SERVICE_URL}/machine`,\n            method: 'post',\n            data: {machineName, location, address}\n        })\n        // return apiServices.post('/machine', { machineName, location, address })\n    },\n\n    updateMachine(id, {machineName, location, address}) {\n        return request({\n            url: `${env.serveConfig.SERVICE_URL}/machine/${id}`,\n            method: 'put',\n            data: {machineName, location, address}\n        })\n        // return apiServices.put(`/machine/${id}`, { machineName, location, address })\n    },\n\n    createProduct({productName, price, number, machineId}) {\n        return request({\n            url: `${env.serveConfig.SERVICE_URL}/product`,\n            method: 'post',\n            data: {productName, price, number, machineId}\n        })\n        // return apiServices.post('/product', { productName, price, number, machineId })\n    },\n\n    updateProduct(id, {productName, price, number, machineId}) {\n        return request({\n            url: `${env.serveConfig.SERVICE_URL}/product/${id}`,\n            method: 'put',\n            data: {productName, price, number, machineId}\n        })\n        // return apiServices.put(`/product/${id}`, { productName, price, number, machineId })\n    },\n\n    checkStock() {\n        return request({\n            url: `${env.serveConfig.SERVICE_URL}/product/checkStock`,\n            method: 'get',\n            data: {}\n        })\n        // return apiServices.get('/product/checkStock')\n    }\n}\n"]},"metadata":{},"sourceType":"module"}