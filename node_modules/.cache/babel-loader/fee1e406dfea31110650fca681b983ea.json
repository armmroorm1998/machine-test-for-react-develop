{"ast":null,"code":"var _jsxFileName = \"/Users/arramsibunrueang/Documents/Work/machine/src/components/AppModal.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Button, Card } from \"react-bootstrap\";\nimport Modal from 'react-bootstrap/Modal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction AppModal(props) {\n  _s();\n\n  const values = [true];\n  const [fullscreen, setFullscreen] = useState(true);\n  const [show, setShow] = useState(false);\n\n  function handleShow(breakpoint) {\n    setFullscreen(breakpoint);\n    setShow(true);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [values.map((v, idx) => /*#__PURE__*/_jsxDEV(Button, {\n      className: \"me-2\",\n      onClick: () => handleShow(v),\n      children: \"See more...\"\n    }, idx, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 17\n    }, this)), /*#__PURE__*/_jsxDEV(Modal, {\n      show: show,\n      fullscreen: fullscreen,\n      onHide: () => setShow(false),\n      children: /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          style: {\n            width: '300px',\n            border: '0px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n            variant: \"top\",\n            src: \"/img/bottle.png\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n              children: \"Pepsi\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n              children: \"\\u0E3F 20\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"primary\",\n              children: \"Go somewhere\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(AppModal, \"r1BdtmaL5kfnF9ZWQx7Jab+0RYs=\");\n\n_c = AppModal;\nexport default AppModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"AppModal\");","map":{"version":3,"sources":["/Users/arramsibunrueang/Documents/Work/machine/src/components/AppModal.js"],"names":["React","useState","Button","Card","Modal","AppModal","props","values","fullscreen","setFullscreen","show","setShow","handleShow","breakpoint","map","v","idx","width","border"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAAQC,MAAR,EAAgBC,IAAhB,QAA2B,iBAA3B;AACA,OAAOC,KAAP,MAAkB,uBAAlB;;;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAAA;;AACrB,QAAMC,MAAM,GAAG,CAAC,IAAD,CAAf;AACA,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BR,QAAQ,CAAC,IAAD,CAA5C;AACA,QAAM,CAACS,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC,KAAD,CAAhC;;AAEA,WAASW,UAAT,CAAoBC,UAApB,EAAgC;AAC5BJ,IAAAA,aAAa,CAACI,UAAD,CAAb;AACAF,IAAAA,OAAO,CAAC,IAAD,CAAP;AACH;;AAED,sBACI;AAAA,eACKJ,MAAM,CAACO,GAAP,CAAW,CAACC,CAAD,EAAIC,GAAJ,kBACR,QAAC,MAAD;AAAkB,MAAA,SAAS,EAAC,MAA5B;AAAmC,MAAA,OAAO,EAAE,MAAMJ,UAAU,CAACG,CAAD,CAA5D;AAAA;AAAA,OAAaC,GAAb;AAAA;AAAA;AAAA;AAAA,YADH,CADL,eAMI,QAAC,KAAD;AAAO,MAAA,IAAI,EAAEN,IAAb;AAAmB,MAAA,UAAU,EAAEF,UAA/B;AAA2C,MAAA,MAAM,EAAE,MAAMG,OAAO,CAAC,KAAD,CAAhE;AAAA,6BACI,QAAC,KAAD,CAAO,IAAP;AAAA,+BACI,QAAC,IAAD;AAAM,UAAA,KAAK,EAAE;AAACM,YAAAA,KAAK,EAAE,OAAR;AAAiBC,YAAAA,MAAM,EAAE;AAAzB,WAAb;AAAA,kCACI,QAAC,IAAD,CAAM,GAAN;AAAU,YAAA,OAAO,EAAC,KAAlB;AAAwB,YAAA,GAAG,EAAC;AAA5B;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI,QAAC,IAAD,CAAM,IAAN;AAAA,oCACI,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI,QAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ,eAKI,QAAC,MAAD;AAAQ,cAAA,OAAO,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBALJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YANJ;AAAA,kBADJ;AAuBH;;GAjCQb,Q;;KAAAA,Q;AAmCT,eAAeA,QAAf","sourcesContent":["import React, {useState} from 'react';\nimport {Button, Card} from \"react-bootstrap\";\nimport Modal from 'react-bootstrap/Modal';\n\nfunction AppModal(props) {\n    const values = [true];\n    const [fullscreen, setFullscreen] = useState(true);\n    const [show, setShow] = useState(false);\n\n    function handleShow(breakpoint) {\n        setFullscreen(breakpoint);\n        setShow(true);\n    }\n\n    return (\n        <>\n            {values.map((v, idx) => (\n                <Button key={idx} className=\"me-2\" onClick={() => handleShow(v)}>\n                    See more...\n                </Button>\n            ))}\n            <Modal show={show} fullscreen={fullscreen} onHide={() => setShow(false)}>\n                <Modal.Body>\n                    <Card style={{width: '300px', border: '0px'}}>\n                        <Card.Img variant=\"top\" src=\"/img/bottle.png\"/>\n                        <Card.Body>\n                            <Card.Title>Pepsi</Card.Title>\n                            <Card.Text>\n                                à¸¿ 20\n                            </Card.Text>\n                            <Button variant=\"primary\">Go somewhere</Button>\n                        </Card.Body>\n                    </Card>\n                </Modal.Body>\n            </Modal>\n        </>\n    );\n}\n\nexport default AppModal;"]},"metadata":{},"sourceType":"module"}