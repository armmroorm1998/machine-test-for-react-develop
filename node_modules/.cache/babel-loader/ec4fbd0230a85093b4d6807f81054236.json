{"ast":null,"code":"var _jsxFileName = \"/Users/arramsibunrueang/Documents/Work/machine/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport { Button, Card, Col, Container, Jumbotron, Row } from \"react-bootstrap\";\nimport AppHeader from \"./components/AppHeader\";\nimport AppGrid from \"./components/AppGrid\";\nimport React, { useEffect, useState } from \"react\";\nimport AppMachineBox from \"./components/AppMachineBox\";\nimport MainServices from \"./services/MainServices\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [machineList, setMachineList] = useState([]);\n  useEffect(() => {\n    GetMachine();\n  }, []);\n\n  async function GetMachine() {\n    try {\n      const resp = await MainServices.getAllMachine();\n      setMachineList(resp.data || []);\n    } catch (e) {\n      console.error(e);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(AppHeader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      fluid: \"md\",\n      children: /*#__PURE__*/_jsxDEV(AppGrid, {\n        children: /*#__PURE__*/_jsxDEV(AppMachineBox, {\n          machineList: machineList\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"vuTB+tuiz8xSTe0VF2xfs3z8XHE=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/arramsibunrueang/Documents/Work/machine/src/App.js"],"names":["Button","Card","Col","Container","Jumbotron","Row","AppHeader","AppGrid","React","useEffect","useState","AppMachineBox","MainServices","App","machineList","setMachineList","GetMachine","resp","getAllMachine","data","e","console","error"],"mappings":";;;AAAA,OAAO,WAAP;AACA,SAAQA,MAAR,EAAgBC,IAAhB,EAAsBC,GAAtB,EAA2BC,SAA3B,EAAsCC,SAAtC,EAAiDC,GAAjD,QAA2D,iBAA3D;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAOC,aAAP,MAA0B,4BAA1B;AACA,OAAOC,YAAP,MAAyB,yBAAzB;;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACX,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCL,QAAQ,CAAC,EAAD,CAA9C;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZO,IAAAA,UAAU;AACb,GAFQ,EAEN,EAFM,CAAT;;AAIA,iBAAeA,UAAf,GAA4B;AACxB,QAAI;AACA,YAAMC,IAAI,GAAG,MAAML,YAAY,CAACM,aAAb,EAAnB;AACAH,MAAAA,cAAc,CAACE,IAAI,CAACE,IAAL,IAAa,EAAd,CAAd;AACH,KAHD,CAGE,OAAOC,CAAP,EAAU;AACRC,MAAAA,OAAO,CAACC,KAAR,CAAcF,CAAd;AACH;AACJ;;AAED,sBACI;AAAA,4BACI,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,SAAD;AAAW,MAAA,KAAK,EAAC,IAAjB;AAAA,6BACI,QAAC,OAAD;AAAA,+BACI,QAAC,aAAD;AAAe,UAAA,WAAW,EAAEN;AAA5B;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA,kBADJ;AAUH;;GA1BQD,G;;KAAAA,G;AA4BT,eAAeA,GAAf","sourcesContent":["import './App.css';\nimport {Button, Card, Col, Container, Jumbotron, Row} from \"react-bootstrap\";\nimport AppHeader from \"./components/AppHeader\";\nimport AppGrid from \"./components/AppGrid\";\nimport React, {useEffect, useState} from \"react\";\nimport AppMachineBox from \"./components/AppMachineBox\";\nimport MainServices from \"./services/MainServices\";\n\nfunction App() {\n    const [machineList, setMachineList] = useState([])\n\n    useEffect(() => {\n        GetMachine()\n    }, [])\n\n    async function GetMachine() {\n        try {\n            const resp = await MainServices.getAllMachine();\n            setMachineList(resp.data || []);\n        } catch (e) {\n            console.error(e)\n        }\n    }\n\n    return (\n        <>\n            <AppHeader/>\n            <Container fluid='md'>\n                <AppGrid>\n                    <AppMachineBox machineList={machineList}/>\n                </AppGrid>\n            </Container>\n        </>\n    );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}