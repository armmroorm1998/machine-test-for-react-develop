{"ast":null,"code":"var _jsxFileName = \"/Users/arramsibunrueang/Documents/Work/machine/src/components/AppMachineBox.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Button, Card, Modal } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Example() {\n  _s();\n\n  const values = [true, 'sm-down', 'md-down', 'lg-down', 'xl-down', 'xxl-down'];\n  const [fullscreen, setFullscreen] = useState(true);\n  const [show, setShow] = useState(false);\n\n  function handleShow(breakpoint) {\n    setFullscreen(breakpoint);\n    setShow(true);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [values.map((v, idx) => /*#__PURE__*/_jsxDEV(Button, {\n      className: \"me-2\",\n      onClick: () => handleShow(v),\n      children: [\"Full screen\", typeof v === 'string' && `below ${v.split('-')[0]}`]\n    }, idx, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 17\n    }, this)), /*#__PURE__*/_jsxDEV(Modal, {\n      show: show,\n      fullscreen: fullscreen,\n      onHide: () => setShow(false),\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: \"Modal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: \"Modal body content\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Example, \"r1BdtmaL5kfnF9ZWQx7Jab+0RYs=\");\n\n_c = Example;\n\nfunction AppMachineBox(props) {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      style: {\n        width: '18rem'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n        variant: \"top\",\n        src: \"/img/logo.png\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n          children: \"Card Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n          children: \"Some quick example text to build on the card title and make up the bulk of the card's content.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          className: \"mx-auto\",\n          children: \"Go somewhere\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), Example]\n  }, void 0, true);\n}\n\n_c2 = AppMachineBox;\nexport default AppMachineBox;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Example\");\n$RefreshReg$(_c2, \"AppMachineBox\");","map":{"version":3,"sources":["/Users/arramsibunrueang/Documents/Work/machine/src/components/AppMachineBox.js"],"names":["React","useState","Button","Card","Modal","Example","values","fullscreen","setFullscreen","show","setShow","handleShow","breakpoint","map","v","idx","split","AppMachineBox","props","width"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAAQC,MAAR,EAAgBC,IAAhB,EAAsBC,KAAtB,QAAkC,iBAAlC;;;;AAEA,SAASC,OAAT,GAAmB;AAAA;;AACf,QAAMC,MAAM,GAAG,CAAC,IAAD,EAAO,SAAP,EAAkB,SAAlB,EAA6B,SAA7B,EAAwC,SAAxC,EAAmD,UAAnD,CAAf;AACA,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BP,QAAQ,CAAC,IAAD,CAA5C;AACA,QAAM,CAACQ,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAC,KAAD,CAAhC;;AAEA,WAASU,UAAT,CAAoBC,UAApB,EAAgC;AAC5BJ,IAAAA,aAAa,CAACI,UAAD,CAAb;AACAF,IAAAA,OAAO,CAAC,IAAD,CAAP;AACH;;AAED,sBACI;AAAA,eACKJ,MAAM,CAACO,GAAP,CAAW,CAACC,CAAD,EAAIC,GAAJ,kBACR,QAAC,MAAD;AAAkB,MAAA,SAAS,EAAC,MAA5B;AAAmC,MAAA,OAAO,EAAE,MAAMJ,UAAU,CAACG,CAAD,CAA5D;AAAA,gCAEK,OAAOA,CAAP,KAAa,QAAb,IAA0B,SAAQA,CAAC,CAACE,KAAF,CAAQ,GAAR,EAAa,CAAb,CAAgB,EAFvD;AAAA,OAAaD,GAAb;AAAA;AAAA;AAAA;AAAA,YADH,CADL,eAOI,QAAC,KAAD;AAAO,MAAA,IAAI,EAAEN,IAAb;AAAmB,MAAA,UAAU,EAAEF,UAA/B;AAA2C,MAAA,MAAM,EAAE,MAAMG,OAAO,CAAC,KAAD,CAAhE;AAAA,8BACI,QAAC,KAAD,CAAO,MAAP;AAAc,QAAA,WAAW,MAAzB;AAAA,+BACI,QAAC,KAAD,CAAO,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAII,QAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAPJ;AAAA,kBADJ;AAgBH;;GA1BQL,O;;KAAAA,O;;AA4BT,SAASY,aAAT,CAAuBC,KAAvB,EAA8B;AAC1B,sBACI;AAAA,4BACI,QAAC,IAAD;AAAM,MAAA,KAAK,EAAE;AAACC,QAAAA,KAAK,EAAE;AAAR,OAAb;AAAA,8BACI,QAAC,IAAD,CAAM,GAAN;AAAU,QAAA,OAAO,EAAC,KAAlB;AAAwB,QAAA,GAAG,EAAC;AAA5B;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,IAAD,CAAM,IAAN;AAAA,gCACI,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAMI,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAC,SAAhB;AAA0B,UAAA,SAAS,EAAC,SAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBANJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAaKd,OAbL;AAAA,kBADJ;AAiBH;;MAlBQY,a;AAqBT,eAAeA,aAAf","sourcesContent":["import React, {useState} from 'react';\nimport {Button, Card, Modal} from \"react-bootstrap\";\n\nfunction Example() {\n    const values = [true, 'sm-down', 'md-down', 'lg-down', 'xl-down', 'xxl-down'];\n    const [fullscreen, setFullscreen] = useState(true);\n    const [show, setShow] = useState(false);\n\n    function handleShow(breakpoint) {\n        setFullscreen(breakpoint);\n        setShow(true);\n    }\n\n    return (\n        <>\n            {values.map((v, idx) => (\n                <Button key={idx} className=\"me-2\" onClick={() => handleShow(v)}>\n                    Full screen\n                    {typeof v === 'string' && `below ${v.split('-')[0]}`}\n                </Button>\n            ))}\n            <Modal show={show} fullscreen={fullscreen} onHide={() => setShow(false)}>\n                <Modal.Header closeButton>\n                    <Modal.Title>Modal</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>Modal body content</Modal.Body>\n            </Modal>\n        </>\n    );\n}\n\nfunction AppMachineBox(props) {\n    return (\n        <>\n            <Card style={{width: '18rem'}}>\n                <Card.Img variant=\"top\" src=\"/img/logo.png\"/>\n                <Card.Body>\n                    <Card.Title>Card Title</Card.Title>\n                    <Card.Text>\n                        Some quick example text to build on the card title and make up the bulk of\n                        the card's content.\n                    </Card.Text>\n                    <Button variant=\"primary\" className='mx-auto'>Go somewhere</Button>\n                </Card.Body>\n            </Card>\n\n            {Example}\n        </>\n    );\n}\n\n\nexport default AppMachineBox;"]},"metadata":{},"sourceType":"module"}